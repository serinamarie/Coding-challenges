# Given a string s consisting only of letters 'a' and 'b'. In a single step 
# you can remove one palindromic subsequence from s.

# Return the minimum number of steps to make the given string empty.

# A string is a subsequence of a given string, if it is generated by deleting 
# some characters of a given string without changing its order.

# A string is called palindrome if is one that reads the same backward as well 
# as forward.

class Solution:
    def removePalindromeSub(self, s: str) -> int:
        # input: a string
        # output: an int
        # constraints: input is 0-1000 chars, only letters a and b
        
        
        # if empty substring, return 0
        # else if already a palindrome, return 1
        # else, as there are 2 symbols in the string, 2 will be the output 
        # as we delete all 'a's from the sequence, and then all 'b's
        
        return 0 if not s else 1 if s == s[::-1] else 2
    
          
                
                